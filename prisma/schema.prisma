// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime? // For soft delete

  @@index([deletedAt])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id               String            @id @default(cuid())
  name             String
  quantity         Int
  price            Float
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  templateProducts TemplateProduct[]
}

model Template {
  id               String            @id @default(cuid())
  name             String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  templateProducts TemplateProduct[]
  invoices         Invoice[]
}

model TemplateProduct {
  id         String   @id @default(cuid())
  templateId String
  productId  String
  quantity   Int
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([templateId, productId])
}

model Invoice {
  id         String   @id @default(cuid())
  templateId String
  totalPrice Float
  createdAt  DateTime @default(now())
  template   Template @relation(fields: [templateId], references: [id])
}

enum Role {
  ADMIN
  USER
}
